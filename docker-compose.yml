services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mongodb:
    image: mongo:6.0
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_DB:-tripsdb}


  producer:
    build:
      context: .
    command: python producer.py
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
      - MONGO_URI=${MONGO_URI}
      - MONGO_DB=${MONGO_DB}
      - MONGO_COLLECTION=${MONGO_COLLECTION}
    volumes:
      - ./producer:/app
  consumer:
    build:
      context: .
    command: python consumer.py
    depends_on:
      - kafka
      - mongodb
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
      - MONGO_URI=${MONGO_URI}
      - MONGO_DB=${MONGO_DB}
      - MONGO_COLLECTION=${MONGO_COLLECTION}
    volumes:
      - ./consumer:/app
  dashboard:
    build:
      context: .
    command: streamlit run dashboard.py --server.port=8501 --server.address=0.0.0.0
    ports:
      - "8501:8501"
    volumes:
      - ./dashboard:/app
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
      - MONGO_URI=${MONGO_URI}
      - MONGO_DB=${MONGO_DB}
      - MONGO_COLLECTION=${MONGO_COLLECTION}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GEMINI_GENERATION_MODEL=${GEMINI_GENERATION_MODEL}
      - PYTHONPATH=/app
    depends_on:
      - mongodb
    env_file:
      - .env
  api:
    build:
      context: .
    command: python api.py
    ports:
      - "5001:5001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Permite controlar os containers
      - ./api:/app
    environment:
      - DOCKER_BUILDKIT=1
      - MONGO_URI=${MONGO_URI}
      - MONGO_DB=${MONGO_DB}
      - MONGO_COLLECTION=${MONGO_COLLECTION}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GEMINI_GENERATION_MODEL=${GEMINI_GENERATION_MODEL}
    depends_on:
      - mongodb

volumes:
  mongodb_data:
